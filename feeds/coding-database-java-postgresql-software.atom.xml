<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>kmonsoor's tech posts</title><link href="http://blog.kmonsoor.com/" rel="alternate"></link><link href="http://blog.kmonsoor.com/feeds/coding-database-java-postgresql-software.atom.xml" rel="self"></link><id>http://blog.kmonsoor.com/</id><updated>2014-12-18T19:18:00+06:00</updated><entry><title>[Step-by-step][How to] Generate ER diagram from a PostgreSQL (or any) database</title><link href="http://blog.kmonsoor.com/generate-er-diagram-from-sql-database.html" rel="alternate"></link><updated>2014-12-18T19:18:00+06:00</updated><author><name>kmonsoor</name></author><id>tag:blog.kmonsoor.com,2014-12-18:generate-er-diagram-from-sql-database.html</id><summary type="html">&lt;p&gt;When you are "study"-ing (for whatever reason) someone else's database,
and the database has more than 10 tables, you are in trouble to
understand what goes where.&lt;/p&gt;
&lt;p&gt;Now, imagine a database with 300+ tables. It's like spaghetti, but not
enjoyable. Rather, horrific.&lt;/p&gt;
&lt;p&gt;I faced a similar challenge recently with a database of 250+ tables.
Yes, i felt like in a deep sh*t. And, started looking for tools which
can describe the tables in at least decent ER-diagram. If anything more,
better. And, obviously free as my company is not paying.&lt;/p&gt;
&lt;p&gt;Then, I found &lt;a href="http://schemaspy.sourceforge.net/"&gt;SchemaSpy&lt;/a&gt;, originally
authored by &lt;a href="https://sites.google.com/site/johncurrier/"&gt;John Currier&lt;/a&gt;.
It generate a complete in-depth HTML-based description (of course,
including clickable ER-diagram) of the database, which you can then
browse with your browser. My this post is on it's basic usage.
&lt;!--more--&gt; The output will be kind of like this:
&lt;a href="https://kmonsoor.files.wordpress.com/2014/12/schemapy_sample.png"&gt;&lt;img alt="schemapy_sample" src="https://kmonsoor.files.wordpress.com/2014/12/schemapy_sample.png?w=660" /&gt;&lt;/a&gt;
It is based on Java technologies, but can work its magic on most of the
major database technologies. But, you would need a appropriate JDBC
connector for that database. Quote from the author:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SchemaSpy uses JDBC's database metadata extraction services to gather
the majority of its information, but has to make vendor-specific SQL
queries to gather some information such as the SQL associated with a
view and the details of check constraints.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now, to use it, you need these staffs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;First of all&lt;/strong&gt;, your system should have &lt;strong&gt;Java runtime&lt;/strong&gt; properly
    installed. &lt;a href="https://java.com/en/download/index.jsp"&gt;Download from
    here.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SchemaSpy, which is a .jar file&lt;/strong&gt;. Get it
    here: &lt;a href="http://sourceforge.net/projects/schemaspy/files/"&gt;http://sourceforge.net/projects/schemaspy/files/&lt;/a&gt;. At the
    time of writing, it was version 5.0.0.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JDBC connector to PostgreSQL&lt;/strong&gt;. Make sure to match your PostgreSQL
    version. You can download it from
    here: &lt;a href="http://jdbc.postgresql.org/download.html"&gt;http://jdbc.postgresql.org/download.html&lt;/a&gt;. You can check your
    PostgreSQL version by running: "SELECT version();" query on
    &lt;strong&gt;&lt;em&gt;psql&lt;/em&gt;&lt;/strong&gt; prompt.&lt;/li&gt;
&lt;li&gt;Also, SchemaSpy depends on &lt;strong&gt;GarphViz&lt;/strong&gt; to generate the ER-diagrams,
    so you need to be installed it on your system. Get it from
    here: &lt;a href="http://www.graphviz.org/Download..php"&gt;http://www.graphviz.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;And, of course PostgreSQL instance running &amp;amp; serving the database
    you are trying to visualize.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Quoting from the author:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SchemaSpy uses the dot executable from
&lt;a href="http://www.graphviz.org/"&gt;Graphviz&lt;/a&gt; to generate graphical
representations of the table/view relationships. This was initially
added for people who see things visually. Now the graphical
representation of relationships is a fundamental feature of the tool.
Graphviz is not required to view the output generated by SchemaSpy,
but &lt;strong&gt;the dot program should be in your PATH&lt;/strong&gt; (not CLASSPATH) when
running SchemaSpy or none of the entity relationship diagrams will be
generated (or use the
&lt;a href="http://schemaspy.sourceforge.net/#gvparam"&gt;&lt;code&gt;-gv&lt;/code&gt;&lt;/a&gt; option).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For convenience, i kept the  .jar files (JDBC-connector, and SchemaSpy)
in my home folder. Now, in my case, My OS is Linux, my DB-host address
is: 127.0.0.1, running PostgreSQL-9.3 at port 5432 . So, i run the
command like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;java -jar ./schemaSpy_5.0.0.jar -t pgsql -host 127.0.0.1:5432 -db your_database_name -u your_DB_user_name -p your_password -s public -dp ./postgresql-9.3-1102.jdbc3.jar -o output_folder&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It may take a little while, depending on the size of the schema of the
database. After that, you will find the output folder/directory named
"output_folder". You'll some output when the magic is going on, like
this.
&lt;code&gt;Using database properties: [./schemaSpy_5.0.0.jar]/net/sourceforge/schemaspy/dbTypes/pgsql.properties Gathering schema details................(6sec) Writing/graphing summary......(2sec) Writing/diagramming details..........................(31sec) Wrote relationship details of 113 tables/views to directory 'output' in 41 seconds. View the results by opening output_folder/index.html&lt;/code&gt;
Now, start browsing the generated docs from "index.html" in the output
folder. Good luck. :)&lt;/p&gt;</summary><category term="db"></category><category term="db-schema"></category><category term="dbms"></category><category term="diagram"></category><category term="ER-diagram"></category><category term="graphviz"></category><category term="java"></category><category term="postgresql"></category><category term="programming"></category><category term="rdbms"></category><category term="schema"></category><category term="schemaspy"></category><category term="visualization"></category></entry></feed>